{
  parserClass="de.nordgedanken.auto_hotkey.parser.AHKParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="AHK"
  psiImplClassSuffix="Impl"
  psiPackage="de.nordgedanken.auto_hotkey.psi"
  psiImplPackage="de.nordgedanken.auto_hotkey.psi.impl"
  //psiImplUtilClass="de.nordgedanken.auto_hotkey.psi.impl.AHKPsiImplUtil"

  elementTypeHolderClass="de.nordgedanken.auto_hotkey.psi.AHKTypes"
  elementTypeClass="de.nordgedanken.auto_hotkey.psi.AHKElementType"
  tokenTypeClass="de.nordgedanken.auto_hotkey.psi.AHKTokenType"


  tokens=[
    LBRACE               =  '{'
    RBRACE               =  '}'
    LBRACK               =  '['
    RBRACK               =  ']'
    LPAREN               =  '('
    RPAREN               =  ')'
    COLON                =  ':'
    SEMICOLON            =  ';'
    COMMA                =  ','
    EQUAL                =  '='
    NOT_EQ               =  '!='
    NOT                  =  '!'
    PLUS_PLUS            =  '++'
    PLUS_ASSIGN          =  '+='
    PLUS                 =  '+'
    MINUS_MINUS          =  '--'
    MINUS_ASSIGN         =  '-='
    MINUS                =  '-'
    COND_OR              =  '||'
    BIT_OR_ASSIGN        =  '|='
    BIT_CLEAR_ASSIGN     =  '&^='
    BIT_CLEAR            =  '&^'
    COND_AND             =  '&&'
    BIT_AND_ASSIGN       =  '&='
    BIT_AND              =  '&'
    BIT_OR               =  '|'
    SHIFT_LEFT_ASSIGN    =  '<<='
    SHIFT_LEFT           =  '<<'
    SEND_CHANNEL         =  '<-'
    LESS_OR_EQUAL        =  '<='
    LESS                 =  '<'
    BIT_XOR_ASSIGN       =  '^='
    BIT_XOR              =  '^'
    MUL_ASSIGN           =  '*='
    MUL                  =  '*'
    QUOTIENT             =  '/'
    SHIFT_RIGHT_ASSIGN   =  '>>='
    SHIFT_RIGHT          =  '>>'
    GREATER_OR_EQUAL     =  '>='
    GREATER              =  '>'
    IF                   = 'if'
  ]

  generateTokenAccessors=true
}

ahkFile ::= item_*

private item_ ::= (property|COMMENT|CRLF|COMMA|NUMBER|FUNCTION_CALL|FUNCTION_DEF|StringLiteral|COLON|HOTKEY|STRING_CALL|EXPRESSION_SCRIPT|C_COMMENT|IF|HEX|RPAREN|BLOCK_COMMENT)

StringLiteral ::= STRING {
  implements = "com.intellij.psi.PsiLanguageInjectionHost"
  mixin = "de.nordgedanken.auto_hotkey.psi.ext.AHKStringLiteralMixin"
  //methods = [isValidHost updateText createLiteralTextEscaper]
}

//function_call ::= KEY LPAREN (StringLiteral | property)? RPAREN
property ::= (KEY VAR_ASIGN (StringLiteral|NUMBER|KEY|(FUNCTION_CALL (StringLiteral|NUMBER|KEY|COMMA|WHITE_SPACE|HEX)+ (FUNCTION_CALL|RPAREN)))) | KEY {
  //methods=[getKey getValue]
  implements="de.nordgedanken.auto_hotkey.psi.AHKNamedElement"
  mixin = "de.nordgedanken.auto_hotkey.psi.ext.AHKPropertyMixin"
}
